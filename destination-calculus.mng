\documentclass[10pt]{article}

\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[a4paper,left=0.75cm,right=0.75cm,top=1.25cm,bottom=2cm]{geometry}
\usepackage{lmodern}
\usepackage[dvipsnames]{xcolor}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{amssymb}
\usepackage{subcaption}
\usepackage{hyperref}
\hypersetup{
    colorlinks,
    linkcolor={red!50!black},
    citecolor={blue!50!black},
    urlcolor={blue!80!black}
  }

\usepackage[backend=biber,citestyle=authoryear,style=alphabetic]{biblatex}
\addbibresource{bibliography.bib}

% For OTT rendering
\usepackage[supertabular]{ottalt}
\inputott{destination-calculus-ott.tex}
\usepackage{ottstyling}

\newcommand{\TODO}[1]{~\textnormal{\textcolor{red}{TODO: #1} } }

\newtheorem{lem}{Lemma}
\newtheorem{thm}{Theorem}

\begin{document}

\title{Destination $\lambda$-calculus}
\author{Thomas \textsc{Bagrel}}
\date{\today}

\maketitle

\section{Term and value syntax}

\ottmetavars

\ottgrammartabular{
\otttermXXvalue\ottinterrule
\ottextendedXXvalue\ottinterrule
\ottterm\ottafterlastrule
}

%\ottsub\ottinterrule

\clearpage
\section{Type system}

\ottgrammartabular{
\otttype\ottinterrule
\ottmultiplicity\ottinterrule
\otttypingXXcontext\ottinterrule

\ottposXXcontext\ottinterrule
\ottposXXassign\ottinterrule
% \ottposXXassigns\ottinterrule
\ottnegXXcontext\ottinterrule
\ottnegXXassign\ottafterlastrule
% \ottnegXXassigns\ottinterrule

%\otteffXXapp\ottinterrule
% \ottauxXXpred\ottinterrule
% \otttyXXsemXXpred\ottafterlastrule
}

\ottdefnsTy

\clearpage
\section{Effects and big-step semantics}

\ottgrammartabular{
\otteffect\ottafterlastrule
}
\ottdefnsSem

\clearpage
\section{Type safety}

\begin{thm}[Type safety]
If $[[ G@ |- t : A ]]$ then $[[t !! v | e]]$ and $[[G@ |- v | e : A]]$.
\end{thm}

\textbf{Proof.} By induction on the typing derivation.

\begin{itemize}

\item \textsc{TyTerm\_Val}: (0) $[[ G@ |- v : A ]]$\\
(0) gives (1) $[[v !! v | o]]$ immediately. From \textsc{TyEff\_NoEff} and \textsc{TyCmd\_Cmd} we conclude (2) $[[G@ |- v | e : A]]$.

\item \textsc{TyTerm\_App}: (0) $[[ m.G1@ µ G2@ |- t & u : A2 ]]$\\
We have\\
(1) $[[ G1@ |- t : A1 ]]$\\
(2) $[[ G2@ |- u : A1 m -> A2 ]]$\\
(3) $[[ G1@ disjoint G2@ ]]$\\
Using recursion hypothesis on (1) we get (4) $[[t !! v1 | e1]]$ where (5) $[[G1@ |- v1 | e1 : A1]]$.\\
Inverting \textsc{TyCmd\_Cmd} we get (5) $[[ G11@ µ G13@ |- v1 : A1 ]]$ and (6) $[[G12 u -(G13@) ||- e1]]$ where (7) $[[G1@ = G11@ µ G12@]]$.\\
Using recursion hypothesis on (2) we get (8) $[[u !! v2 | e2]]$ where (9) $[[G2@ |- v2 | e2 : A1 m -> A2]]$.\\
Inverting \textsc{TyCmd\_Cmd} we get (10) $[[ G21@ µ G23@ |- v2 : A1 m -> A2 ]]$ and (11) $[[G22 u -(G23@) ||- e2]]$ where (12) $[[G2@ = G21@ µ G22@]]$.\\
Using Lemma~\ref{lem:canonical} on (9) we get (13) $[[v2 = \x -> t']]$ and (14) $[[G21@ µ G23@ µ {x : m A1} |- t' : A2]]$.

\textit{Typing value part of the result}

Using Lemma~\ref{lem:subst} on (14) and (5) we get (15) $[[ m.(G11@ µ G13@) µ (G21@ µ G23@) |- t'[x := v1] : A2]]$.\\
Using recursion hypothesis on (15) we get (16) $[[t'[x := v1] !! v3 | e3]]$ where (17) $[[ m.(G11@ µ G13@) µ (G21@ µ G23@) |- v3 | e3: A2]]$.

\textit{Typing effect part of the result}

We have\\
(6) $[[G12@ u -(G13@) ||- e1]]$ \\
(11) $[[G22@ u -(G23@) ||- e2]]$

$[[G12@ disjoint G22@]]$ comes naturally from (3), (7) and (12).

We must show:\\
$[[G12@ disjoint G23@]]$: holes in $[[e2]]$ (associated to $[[u]]$) are fresh so they cannot match a destination name from $[[t]]$ as they don't exist yet when $[[t]]$ is evaluated.\\
$[[G22@ disjoint G13@]]$: slightly harder. Holes in $[[e1]]$ (associated to $[[t]]$) are fresh too, so I don't see a way for $[[u]]$ to create a term that could mention them, but sequentially, at least, they exist during $[[u]]$ evaluation. In fact, $[[G22]]$ might have intersection with $[[G13]]$ (see \textsc{TyEff\_Union}) as long as they share the same modalities (it's even harder to rove I think).\\
$[[G13@ disjoint G23@]]$: freshness of holes in both effects, executed sequentially, should be enough.

\end{itemize}

\begin{thm}[Type safety for complete programs]
  If $[[ {} |- t : A ]]$ then $[[t !! v | o]]$ and $[[{} |- v : A]]$.
\end{thm}

\end{document}
