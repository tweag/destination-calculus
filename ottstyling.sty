\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{ottstyling}[2023/12/07 Custom operators and commands for OTT rendering]

\RequirePackage{stmaryrd}
\RequirePackage{bbold}
\RequirePackage[safe]{tipa}
\RequirePackage{halloweenmath}

% Big comma for Ampar
\DeclareSymbolFont{bbsymbol}{U}{bbold}{m}{n}
\DeclareMathSymbol{\bbcomma}{\mathbin}{bbsymbol}{"2C}

% Allow sans-serif + bold font in math mode
\DeclareMathAlphabet{\mathsfbf}{T1}{\sfdefault}{sbc}{n}

\definecolor{ntcolor}{RGB}{75, 75, 75}
\definecolor{kwcolor}{RGB}{0, 0, 0}
\definecolor{ctorcolor}{RGB}{0, 0, 0}
% \definecolor{??color}{HTML}{F8980F} % yellow-orange, underlined
\definecolor{typcolor}{HTML}{176FC1} % blue, bold
\definecolor{spcolor}{HTML}{1C5737} % dark green, not official one
\definecolor{modecolor}{HTML}{00AAA0} % green-blue, tt
\definecolor{mvcolor}{HTML}{F35EB7} % pink, sf
\definecolor{hdmvcolor}{HTML}{F14B2D} % red, itshape

\renewcommand{\ottnt}[1]{\textcolor{ntcolor}{\mathsf{#1} } }
\renewcommand{\ottmv}[1]{\textcolor{mvcolor}{\mathsf{#1} } }
\renewcommand{\ottkw}[1]{\textcolor{kwcolor}{\mathsfbf{#1} } }

\newcommand{\ottstype}[1]{\textcolor{typcolor}{\mathsfbf{#1} } }
\newcommand{\ottsxval}[1]{\textcolor{ntcolor}{\mathsf{\replacewv{\overline{#1} } } } }
\newcommand{\ottsctor}[1]{\textcolor{ctorcolor}{\mathsf{#1} } }
\newcommand{\ottssp}[1]{\textcolor{spcolor}{\mathit{#1} } }
\newcommand{\ottseff}[1]{#1} % no special rendering for effects at the moment
\newcommand{\ottshdnm}[1]{\textcolor{hdmvcolor}{\mathtt{#1} } }
\newcommand{\ottsmode}[1]{\textcolor{modecolor}{\mathit{#1} } }

% Replace normal l with fancy round l in label names
% \newcommand{\replacelell}[1]{%
%   \begingroup%
%   \mathcode`l=\ell%
%   #1%
%   \endgroup%
% }

% Replace w with v in extend values rendering (as a bar is added)
\newcommand{\replacewv}[1]{%
  \begingroup%
  \mathcode`w=\mathcode`v
  #1%
  \endgroup%
}

% Used to allow tabs and newlines in OTT terms
\def\activespaces{
  \def\mynewline{\\}
  \def\myspace##1{\myrepeat{##1}{\hspace{0.7cm} } }
}
\def\visiblespaces{
  \def\mynewline{\ottssp{\backslash\!n} }
  \def\myspace##1{\myrepeat{##1}{\ottssp{\langle \ldots \rangle} } }
}
\visiblespaces{}
\makeatletter
  \newcount\my@repeat@count
  \newcommand{\myrepeat}[2]{%
    \begingroup
    \my@repeat@count=\z@
    \@whilenum\my@repeat@count<#1\do{#2\advance\my@repeat@count\@ne}%
    \endgroup
  }
\makeatother

% Short equal operator and assignment operator
\makeatletter
\newcommand{\shorteq}{%
  \settowidth{\@tempdima}{--}% Width of hyphen
  \resizebox{\@tempdima}{\height}{=}%
}
\makeatother
\newcommand{\coloneq}{\mathrel{%
  \!\raisebox{0.09ex}{$\mathop{:}$\hspace{-0.1ex}%
  }%
  \shorteq\hspace{-0.2ex}%
}%
}

% Lambda abstraction with and without type annotation
% \newcommand{\lam}[3]{\ottsctor{\lambda}\,#1\!:\!#2\,\textbf{.}\,#3}
\newcommand{\lamnt}[2]{\ottsctor{\lambda}#1\,\mapsto\,#2}
% \newcommand{\Lam}[2]{\ottsctor{\Lambda}\,#1\,\textbf{.}\,#2}

% Constructor for exponential
\newcommand{\expcons}[1]{\ottsctor{\rrparenthesis }^{#1}\,}

% Raised and scaled bullet for fillComp
\newlength{\mylen}
\setbox1=\hbox{$\bullet$}\setbox2=\hbox{$\scriptscriptstyle\bullet$}
\setlength{\mylen}{\dimexpr0.5\ht1-0.5\ht2}
\def\mybullet{\raisebox{\mylen}{$\scriptscriptstyle\bullet$} }

% Raised cdot for negative context product
% https://tex.stackexchange.com/questions/597955/a-math-font-size-knowledgeable-raisebox
\makeatletter
\newcommand{\topprod}[1]{\mathpalette\abcd@{#1\ottsmode{\cdot} } }
\newcommand{\abcd@}[2]{%
  % #1 = math style
  % #2 = text to be lowered
  \raisebox{%
    % we make it so that the top of the
    % lowered part is at the formula axis
    \dimexpr+\abcd@fontdimen{#1}%
  }{%
    % we don't want that \scriptspace kicks in
    \scriptspace=\z@
    % the part to be lowered
    $\m@th#1#2$%
  }%
}
\newcommand{\abcd@fontdimen}[1]{%
  % the height of the formula axis is \fontdimen22 <math font of family 2>
  \fontdimen22
  \ifx#1\displaystyle\textfont\else
  \ifx#1\textstyle\textfont\else
  \ifx#1\scriptstyle\scriptfont\else
  \scriptscriptfont\fi\fi\fi 2
}
\makeatother

% Restriction command for context restricted to destinations
\def\restriction#1#2{\mathchoice
              {\setbox1\hbox{${\displaystyle #1}_{\scriptstyle #2}$}
              \restrictionaux{#1}{#2} }
              {\setbox1\hbox{${\textstyle #1}_{\scriptstyle #2}$}
              \restrictionaux{#1}{#2} }
              {\setbox1\hbox{${\scriptstyle #1}_{\scriptscriptstyle #2}$}
              \restrictionaux{#1}{#2} }
              {\setbox1\hbox{${\scriptscriptstyle #1}_{\scriptscriptstyle #2}$}
              \restrictionaux{#1}{#2} } }
\def\restrictionaux#1#2{ {#1\,\smash{\vrule height .8\ht1 depth .85\dp1} }_{\,#2} }

\newcommand{\cupplus}{\,\text{\makebox[0pt][l]{$\cup$}\raisebox{.40ex}{\hspace{.15ex}$\scriptscriptstyle+$}}~}
\newcommand{\cupdouble}{\,\text{\makebox[0pt][l]{$\cup$}\raisebox{.40ex}{\hspace{.15ex}$\scriptscriptstyle\cup$}}~}